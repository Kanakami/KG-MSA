Linux/UNIX Install (tar)


Open up your terminal/shell.
1.Extract the contents of the archive, using:
    tar -xf <filecode>.
  For example,
    tar -xf neo4j-community-3.5.6-unix.tar.gz
  Place the extracted files in a permanent home on your server. The top level directory is referred to as NEO4J_HOME.
2.To run Neo4j as a console application, use:
    <NEO4J_HOME>/bin/neo4j console
  To run Neo4j in a background process, use:
    <NEO4J_HOME>/bin/neo4j start
3.For additional commands see the Unix tarball installation documentation.
    Visit http://localhost:7474 in your web browser.
    Connect using the username 'neo4j' with default password 'neo4j'. You'll then be prompted to change the password.
    Neo4j Operations Manual: Linux Installation →

neo4j开放外部端口访问
去conf里打开conf文件并修改配置
# With default configuration Neo4j only accepts local connections.
# To accept non-local connections, uncomment this line:
dbms.connectors.default_listen_address=0.0.0.0


neo4j数据的迁移
1.数据的Source和Destination都需要首先关闭
./neo4j stop
2.备份数据
./neo4j-admin  dump --database=graph.db --to=/home/2018.dump
3.导入数据
./neo4j-admin load --from=/home/2016-10-02.dump --database=graph.db --force
4.重启服务
./neo4j start


删除GraphNode标签
    MATCH(m)
            REMOVE m:GraphNode
            RETURN m

清空neo4j的指令
    MATCH (n)
            OPTIONAL MATCH (n)-[r]-()
            DELETE n,r


ATCH(a)
WHERE a.name = "Eskil" AND ANY(x IN a.array WHERE x = "one")
RETURN a
返回路径中的所有节点的array数组属性中至少有一个值为"one"

MATCH ()-[r:Traces]->()
WHERE r IN ['Joe', 'John', 'Sara'] AND
follwer.name =~ 'S.*'
RETURN user.name, follwer.name

MATCH ()-[r:Traces]->()
WHERE ANY(x IN r.traceIdSpanId WHERE x =~ '319bbc7da0a4612347afb75412674fcd-.*')
RETURN r

MATCH (from)-[relationship]->(to)
RETURN relationship, from, to


Trace指令
MATCH (n)-[r:TraceInvokeApiToPod|TraceInvokePodToApi]->(m)
WHERE ANY(x IN r.traceIdSpanId WHERE x =~ '75c1d44834925763c082bf6cf7863e53-.*') and ANY(y IN r.traceIdSpanId WHERE y =~ '75c1d44834925763c082bf6cf7863e53-.*')
RETURN n,r,m

MATCH (n)-[r:TraceInvokeApiToPod|TraceInvokePodToApi]->(m)
WHERE ANY(x IN r.traceIdSpanId WHERE x =~ '3981be0de236a85e8ee2f91faabd804c-.*')
RETURN n,r,m

3981be0de236a85e8ee2f91faabd804c

查询多个Trace的交叠部分
MATCH (n)-[r:TraceInvokeApiToPod|TraceInvokePodToApi]->(m)-[rs:AppServiceAndPod|AppServiceHostServiceAPI|VirtualMachineAndPod]->(s)
WHERE
    ANY(x IN r.traceIdSpanId WHERE x =~ '3981be0de236a85e8ee2f91faabd804c-.*')
RETURN n,r,m,rs,s

        AND
    ANY(y IN r.traceIdSpanId WHERE y =~ '5e92c60ddaacaf85ec4b2ed75c74964a-.*')



MATCH (n)-[r:TraceInvokeApiToPod|TraceInvokePodToApi]->(m)<-[rm:PodAndMetric|ServiceApiAndMetric]-(metrics)
WHERE
    ANY(x IN r.traceIdSpanId WHERE x =~ '3981be0de236a85e8ee2f91faabd804c-.*')
WITH n,r,m,metrics,rm
RETURN metrics,rm

http://localhost:17632/getCrossOfTwoTrace/75c1d44834925763c082bf6cf7863e53/5e92c60ddaacaf85ec4b2ed75c74964a